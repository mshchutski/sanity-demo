/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Article = {
  _id: string
  _type: 'article'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  poster?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        _type: 'image'
        _key: string
      }
  >
  author?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'author'
  }
}

export type Author = {
  _id: string
  _type: 'author'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  position?: string
  about?: string
  slug?: Slug
  picture?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
}

export type HomeCarousel = {
  _id: string
  _type: 'homeCarousel'
  _createdAt: string
  _updatedAt: string
  _rev: string
  travel?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'travel'
  }
  subTitle?: string
}

export type Travel = {
  _id: string
  _type: 'travel'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  date?: string
  guide?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'guide'
  }
  poster?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  activity?: string
  tripLength?: string
  groupSize?: string
  price?: string
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        _type: 'image'
        _key: string
      }
  >
}

export type Guide = {
  _id: string
  _type: 'guide'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  position?: string
  about?: string
  slug?: Slug
  picture?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | Article
  | Author
  | HomeCarousel
  | Travel
  | Guide
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Slug
export declare const internalGroqTypeReferenceTo: unique symbol
// Source: ../sanity-demo/sanity/lib/queries/article.ts
// Variable: articleBySlugQuery
// Query: *[_type == "article" && slug.current == $slug][0]{  _id,  title,  _updatedAt,  _createdAt,  poster,  content,  "slug": slug.current,  "author": author->{name, about, picture, slug},}
export type ArticleBySlugQueryResult = {
  _id: string
  title: string | null
  _updatedAt: string
  _createdAt: string
  poster: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  } | null
  content: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        _type: 'image'
        _key: string
      }
  > | null
  slug: string | null
  author: {
    name: string | null
    about: string | null
    picture: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      alt?: string
      _type: 'image'
    } | null
    slug: Slug | null
  } | null
} | null
// Variable: recentArticlesQuery
// Query: *[_type == "article" && wasDeleted != true && isDraft != true] | order(_updatedAt desc)[0..3]
export type RecentArticlesQueryResult = Array<{
  _id: string
  _type: 'article'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  poster?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        _type: 'image'
        _key: string
      }
  >
  author?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'author'
  }
}>
// Variable: articlesQuery
// Query: *[_type == "article" && wasDeleted != true && isDraft != true] | order(_updatedAt desc)
export type ArticlesQueryResult = Array<{
  _id: string
  _type: 'article'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  poster?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        _type: 'image'
        _key: string
      }
  >
  author?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'author'
  }
}>
// Variable: articleSlugsQuery
// Query: *[_type == "article" && defined(slug.current)][].slug.current
export type ArticleSlugsQueryResult = Array<string | null>
// Source: ../sanity-demo/sanity/lib/queries/author.ts
// Variable: authorBySlugQuery
// Query: *[_type == "author" && slug.current == $slug][0]{  _id,  _updatedAt,  _createdAt,  _ref,  name,  picture,  about,  "slug": slug.current,  "articles": *[_type=='article' && references(^._id)]{_id, poster, title, author, date, "slug": slug.current},}
export type AuthorBySlugQueryResult = {
  _id: string
  _updatedAt: string
  _createdAt: string
  _ref: null
  name: string | null
  picture: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  } | null
  about: string | null
  slug: string | null
  articles: Array<{
    _id: string
    poster: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      alt?: string
      _type: 'image'
    } | null
    title: string | null
    author: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'author'
    } | null
    date: null
    slug: string | null
  }>
} | null
// Variable: authorSlugsQuery
// Query: *[_type == "author" && defined(slug.current)][].slug.current
export type AuthorSlugsQueryResult = Array<string | null>
// Variable: authorsQuery
// Query: *[_type == "author" && wasDeleted != true && isDraft != true] | order(_updatedAt desc)
export type AuthorsQueryResult = Array<{
  _id: string
  _type: 'author'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  position?: string
  about?: string
  slug?: Slug
  picture?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
}>
// Source: ../sanity-demo/sanity/lib/queries/cards.ts
// Variable: cardsQuery
// Query: *[_type == "card"] | order(_createdAt desc)
export type CardsQueryResult = Array<never>
// Variable: getCardsQuery
// Query:     *[_type == 'card']
export type GetCardsQueryResult = Array<never>
// Source: ../sanity-demo/sanity/lib/queries/carousel.ts
// Variable: carouselQuery
// Query: *[_type == "carousel"]
export type CarouselQueryResult = Array<never>
// Source: ../sanity-demo/sanity/lib/queries/guide.ts
// Variable: guidesQuery
// Query: *[_type == "guide" && wasDeleted != true && isDraft != true] | order(_updatedAt desc)
export type GuidesQueryResult = Array<{
  _id: string
  _type: 'guide'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  position?: string
  about?: string
  slug?: Slug
  picture?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
}>
// Variable: guideBySlugQuery
// Query: *[_type == "guide" && slug.current == $slug][0]
export type GuideBySlugQueryResult = {
  _id: string
  _type: 'guide'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  position?: string
  about?: string
  slug?: Slug
  picture?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
} | null
// Variable: guideSlugsQuery
// Query: *[_type == "guide" && defined(slug.current)][].slug.current
export type GuideSlugsQueryResult = Array<string | null>
// Source: ../sanity-demo/sanity/lib/queries/headerCarousel.ts
// Variable: headerCarouselQuery
// Query: *[_type == "homeCarousel"]{  _id,  _updatedAt,  _createdAt,  subTitle,  "travel": travel->{title, poster, slug},}
export type HeaderCarouselQueryResult = Array<{
  _id: string
  _updatedAt: string
  _createdAt: string
  subTitle: string | null
  travel: {
    title: string | null
    poster: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      alt?: string
      _type: 'image'
    } | null
    slug: Slug | null
  } | null
}>
// Source: ../sanity-demo/sanity/lib/queries/posts.ts
// Variable: postsQuery
// Query: *[_type == "post" && defined(slug.current)] | order(_createdAt desc)
export type PostsQueryResult = Array<never>
// Variable: postBySlugQuery
// Query: *[_type == "post" && slug.current == $slug][0]
export type PostBySlugQueryResult = null
// Variable: postSlugsQuery
// Query: *[_type == "post" && defined(slug.current)][].slug.current
export type PostSlugsQueryResult = Array<never>
// Source: ../sanity-demo/sanity/lib/queries/travel.ts
// Variable: travelBySlugQuery
// Query: *[_type == "travel" && slug.current == $slug][0]{  _id,  title,  date,  _updatedAt,  _createdAt,  poster,  content,  activity,  tripLength,  price,  groupSize,  "slug": slug.current,  "guide": guide->{name, about, picture, slug},}
export type TravelBySlugQueryResult = {
  _id: string
  title: string | null
  date: string | null
  _updatedAt: string
  _createdAt: string
  poster: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  } | null
  content: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        _type: 'image'
        _key: string
      }
  > | null
  activity: string | null
  tripLength: string | null
  price: string | null
  groupSize: string | null
  slug: string | null
  guide: {
    name: string | null
    about: string | null
    picture: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      alt?: string
      _type: 'image'
    } | null
    slug: Slug | null
  } | null
} | null
// Variable: travelsQuery
// Query: *[_type == "travel" && wasDeleted != true && isDraft != true] | order(_updatedAt desc)
export type TravelsQueryResult = Array<{
  _id: string
  _type: 'travel'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  date?: string
  guide?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'guide'
  }
  poster?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  activity?: string
  tripLength?: string
  groupSize?: string
  price?: string
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        _type: 'image'
        _key: string
      }
  >
}>
// Variable: travelsSlugsQuery
// Query: *[_type == "travel" && defined(slug.current)][].slug.current
export type TravelsSlugsQueryResult = Array<string | null>
